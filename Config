# This file contains common pin mappings for the BigTreeTech OctoPus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.
##
## ron Design VORON2 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths							[mcu] section
## Thermistor types						[extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Z Endstop Switch location			[safe_z_home] section
## Homing end position				[gcode_macro G32] section
## Z Endstop Switch  offset for Z0		[stepper_z] section
## Probe points							[quad_gantry_level] section
## Min & Max gantry corner postions		[quad_gantry_level] section
## PID tune								[extruder] and [heater_bed] sections
## Probe pin								[probe] section
## Fine tune E steps	[extruder] section
##[exclude_object]
[include klicky-probe.cfg]
##[include LED.cfg]
##[include autoz.cfg]
[include clean_nozzle.cfg]
[include mainsail.cfg]
[include Macros.cfg]
[Virtual_sdcard]
path: ~/gcode_files
[display_status]
[pause_resume]
[gcode_macro CANCEL_PRINT]
[include ADXL.cfg]


#description: Cancel the actual running print
#rename_existing: CANCEL_PRINT_BASE
 # gcode:
##TURN_OFF_HEATERS
#CANCEL_PRINT_BASE



[mcu]
##	[X in MOTOR0] - B Motor
##	[Y in MOTOR1] - A Motor
##	[E in MOTOR6] - Extruder
##	Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_2A000700105053424E363620-if00
##restart_method: command
##--------------------------------------------------------------------

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[printer]
kinematics: corexy
max_velocity: 600 
max_accel: 7000   #Max 4000
max_accel_to_decel: 3500
max_z_velocity: 15 			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100
#####################################################################
# 	X/Y Stepper Settings
#####################################################################
#


## X Stepper on MOTOR0(B Motor)
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PG6
position_min: 0
##--------------------------------------------------------------------

##	Uncomment below for 250mm build
#position_endstop: 250
#position_max: 250

##	Uncomment for 300mm build
#position_endstop: 300
#position_max: 300

##	Uncomment for 350mm build
position_endstop: 350
position_max: 350

##--------------------------------------------------------------------
homing_speed: 25   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC4
interpolate: True
run_current: 1.0
hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

## Y Stepper on MOTOR1 (A Motor)
[stepper_y]
step_pin: !PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PG9
position_min: 0
##--------------------------------------------------------------------

##	Uncomment for 250mm build
#position_endstop: 250
#position_max: 250

##	Uncomment for 300mm build
#position_endstop: 300
#position_max: 300

##	Uncomment for 350mm build
position_endstop: 353
position_max: 353

##--------------------------------------------------------------------
homing_speed: 25  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PD11
interpolate: True
run_current: 1.0
hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
 
#####################################################################
# 	Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left on MOTOR2_1
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16
endstop_pin: PG10
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##	Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
##--------------------------------------------------------------------

##	Uncomment below for 250mm build
#position_max: 240

##	Uncomment below for 300mm build
#position_max: 290

##	Uncomment below for 350mm build
position_max: 340

##--------------------------------------------------------------------
position_min: -20
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC6
interpolate: true
run_current: 0.8
hold_current: 1
sense_resistor: 0.110
stealthchop_threshold: 0

## Z1 Stepper - Rear Left on MOTOR3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: true
run_current: 0.8
hold_current: 1
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z2 Stepper - Rear Right on MOTOR4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: true
run_current: 0.8
hold_current:  1
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z3 Stepper - Front Right on MOTOR5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: true
run_current:  0.8
hold_current:  1
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
# 	Extruder
#####################################################################

#	E0 on MOTOR6
[extruder]
step_pin: PE2
dir_pin: PE3
enable_pin: !PD4
##	Update value below when you perform extruder calibration
##	If you ask for 100mm of filament, but in reality it is 98mm:
##	rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 4.637	#Bondtech 5mm Drive Gears
##	Update Gear Ratio depending on your Extruder Type
##	Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##	Use 80:20 for M4, M3.1
##  gear_ratio: 50:17				#BMG Gear Ratio
microsteps: 16
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: PA2
##	Validate the following thermistor type to make sure it is correct
sensor_type: Generic 3950

sensor_pin: PF4
min_temp: 0
max_temp: 288
max_power: 1.0
min_extrude_temp: 170
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
##	Try to keep pressure_advance below 1.0
max_extrude_only_distance: 50000
max_extrude_only_velocity: 120
max_extrude_only_accel: 3000
pressure_advance: 0.036
##	Default is 0.040, leave stock
pressure_advance_smooth_time: 0.02
max_extrude_cross_section: 50.0
##	E0 on MOTOR6
##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: PE1
interpolate: true
run_current: 0.85
hold_current: 0.1
sense_resistor: 0.110
stealthchop_threshold: 0
driver_TBL: 0
driver_HEND: 6
driver_HSTRT: 7
driver_TOFF: 4

#####################################################################
# 	Bed Heater
#####################################################################

[heater_bed]
##	SSR Pin - BED_OUT
heater_pin: PA1
sensor_type: Generic 3950
sensor_pin: PF3
##	Adjust Max Power so your heater doesn't warp your bed
max_power: 1
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769


[temperature_sensor Chamber]
sensor_type: Generic 3950
Sensor_pin: PF5
#####################################################################
# 	Probe
#####################################################################

[probe]
##	Inductive Probe
##	This probe is not used for Z height, only Quad Gantry Leveling

# Select the probe port by type:
## For the PROBE port; use this with the original OMRON sensor.
pin: ^PG11
## For the spare endstop port; use this with the Fotek PL-05N (or generic) inductive probe
#pin: ^PG11
## For Octopus Pro Probe port; NPN and PNP proximity switch types can be set by jumper
#pin: ^PC5

#--------------------------------------------------------------------

x_offset: 0
y_offset: 4
z_offset: 3.8
speed: 3.0
samples: 5
samples_result: median

sample_retract_dist: 1.5
samples_tolerance: 0.0075
samples_tolerance_retries: 7

#####################################################################
# 	Fan Control
#####################################################################
[fan]
##	Print Cooling Fan - CNC_FAN0
pin: PE5
kick_start_time: 0.1
##	Depending on your fan, you may need to increase this value
##	if your fan will not start. Can change cycle_time (increase)
##	if your fan is not able to slow down effectively
off_below: 0.10

[heater_fan hotend_fan]
##	Hotend Fan - CNC_FAN1
pin:  PD13
max_power: 1.0
kick_start_time: 0.1
heater: extruder
heater_temp: 60
##	If you are experiencing back flow, you can reduce fan_speed
fan_speed: 1
hardware_pwm: False

[heater_fan controller_fan]
##	Controller fan - CNC_FAN2
pin: PA8 
kick_start_time: 0.1
fan_speed: 0.5
heater: heater_bed
heater_temp: 20

[heater_fan controller_fan2]
##	Controller fan - CNC_FAN2
pin: PD12 
kick_start_time: 0.1
fan_speed: 0.5
heater: heater_bed
heater_temp: 20


#[heater_fan controller_fan3 ]
##	Controller fan - CNC_FAN2
#pin: PD15
#max_power: 1
#kick_start_time: 0.1
#fan_speed: 0.0
#heater: heater_bed
#heater_temp: 90
#[heater_fan exhaust_fan]
#pin: PD15
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 0.5
#heater: heater_bed
#heater_temp: 90
#fan_speed: 0.8

[fan_generic nevermore]
pin: PD15
off_below: 0.15

[gcode_macro set_nevermore]
description:
  Use to set the threshold temperature above which the nevermore will turn on.
  It will also run if the heater is off until the bed cools down to the
  threshold temperature. Stores the threshold between restarts using
  [save_variables].

  Turn on when bed target or actual temperature is above 75C:
  SET_NEVERMORE THRESHOLD=75

  Disable it permanently by setting the threshold to 0:
  SET_NEVERMORE THRESHOLD=0

variable_last_threshold: -1
variable_last_speed: -1
gcode:
  {% set threshold = params.THRESHOLD|float %}
  SAVE_VARIABLE VARIABLE=nevermore_threshold VALUE={threshold}

[delayed_gcode nevermore_controller]
initial_duration: 1
gcode:
  {% set threshold = 0 %}
  {% if "nevermore_threshold" in printer.save_variables.variables %}
    {% set threshold = printer.save_variables.variables.nevermore_threshold %}
  {% endif %}
  {% set last_threshold = printer["gcode_macro set_nevermore"].last_threshold %}
  {% set last_speed = printer["gcode_macro set_nevermore"].last_speed %}
  {% set target_temp = printer.heater_bed.target %}
  {% set actual_temp = printer.heater_bed.temperature %}

  {% set speed = 0 %}

  {% if threshold > 0 and (target_temp > threshold or actual_temp > threshold) %}
    {% set speed = 1 %}
  {% endif %}

  {% if last_speed != speed %}
    {% if threshold > 0 %}
      {% if speed > 0 %}
        { action_respond_info('Nevermore on') }
      {% else %}
        { action_respond_info('Nevermore off') }
      {% endif %}
    {% endif %}

    SET_FAN_SPEED FAN=nevermore SPEED={speed}
    SET_GCODE_VARIABLE MACRO=set_nevermore VARIABLE=last_speed VALUE={speed}
  {% endif %}

  {% if last_threshold == -1 or last_threshold != threshold %}
    SET_GCODE_VARIABLE MACRO=set_nevermore VARIABLE=last_threshold VALUE={threshold}
  {% endif %}

  {% if last_threshold == -1 and threshold == 0 %}
    { action_respond_info('Nevermore permanently off. Use SET_NEVERMORE THRESHOLD to activate above set temperature.') }
  {% endif %}

  UPDATE_DELAYED_GCODE ID=nevermore_controller DURATION=5



######################FILAMENT SENSOR ####################################
[pause_resume]


[filament_motion_sensor filament_sensor]
detection_length: 10
#   The minimum length of filament pulled through the sensor to trigger
#   a state change on the switch_pin
#   Default is 7 mm.
extruder: extruder
#   The name of the extruder section this sensor is associated with.
#   This parameter must be provided.
switch_pin: ^PG12
#   The pin on which the switch is connected. This parameter must be
#   provided.
pause_on_runout: False
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
runout_gcode:
  Pause
insert_gcode:
  RESUME
event_delay: 0.1
pause_delay: 0.1


#####################################################################
# 	LED Control
#####################################################################

#[output_pin caselight]
# Chamber Lighting - HE1 Connector (Optional)
#pin: PA3
#pwm:true
#shutdown_value: 0
#value:1
#cycle_time: 0.01

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800


#[safe_z_home]
##	XY Location of the Z Endstop Switch
##	Update -10,-10 to the XY coordinates of your endstop pin 
##	(such as 157,305) after going through Z Endstop Pin
##	Location Definition step.
#home_xy_position:129,349
#speed:100
#z_hop:10

[quad_gantry_level]
##	Use QUAD_GANTRY_LEVEL to level a gantry.
##	Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##	MAX (250, 250), (300,300), or (350,350) depending on your printer size
##	to respective belt positions

#--------------------------------------------------------------------
##	Gantry Corners for 250mm Build
##	Uncomment for 250mm build
#gantry_corners:
#	-60,-10
#	310, 320
##	Probe points
#points:
#	50,25
#	50,175
#	200,175
#	200,25

##	Gantry Corners for 300mm Build
##	Uncomment for 300mm build
#gantry_corners:
#	-60,-10
#	360,370
##	Probe points
#points:
#	50,25
#	50,225
#	250,225
#	250,25

##	Gantry Corners for 350mm Build
##	Uncomment for 350mm build
gantry_corners:
	-60,-10
	410,420
#Probe points
points:
	50,25
    50,275
	300,275
	300,25

#--------------------------------------------------------------------
speed: 150
horizontal_move_z: 10
retries: 6
retry_tolerance: 0.0075
max_adjust: 8

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
     #EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    #EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
# 	Displays
#####################################################################

## 	Uncomment the display that you have
#--------------------------------------------------------------------

#[display]
##	RepRapDiscount 128x64 Full Graphic Smart Controller
#lcd_type: st7920
#cs_pin: EXP1_4
#sclk_pin: EXP1_5
#sid_pin: EXP1_3
#menu_timeout: 40
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2

#[output_pin beeper]
#pin: EXP1_1

#--------------------------------------------------------------------

[display]
#mini12864 LCD Display
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2

[neopixel btt_mini12864]
##	To control Neopixel RGB in mini12864 display
pin: EXP1_6
chain_count: 3
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.0
color_order: RGB

##	Set RGB values on boot up for each Neopixel. 
##	Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
      SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
      SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
      SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

#--------------------------------------------------------------------
[bed_mesh]
speed: 150
horizontal_move_z: 10
##--------------------------------------------------------------------
##	Uncomment below for 250mm build
#mesh_min: 40, 40
#mesh_max: 210,210

##	Uncomment for 300mm build
#mesh_min: 40, 40
#mesh_max: 260,260

##	Uncomment for 350mm build
mesh_min: 40, 40
mesh_max: 310,310

##--------------------------------------------------------------------
fade_start: 1
fade_end: 10.0
probe_count: 5,5
algorithm: bicubic
#relative_reference_index: 12
zero_reference_position: 125, 110

[input_shaper]

shaper_freq_x: 53.8
shaper_freq_y: 41
shaper_type: mzv



#####################################################################
# 	Macros
#####################################################################


## 	Thermistor Types
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "NTC 100K beta 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 59.601
#*# pid_ki = 3.230
#*# pid_kd = 274.907
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 19.008
#*# pid_ki = 0.741
#*# pid_kd = 121.889
#*#
#*# [stepper_z]
#*# position_endstop = 1.048
#*#
#*# [probe]
#*#
#*# [bed_mesh 1]
#*# version = 1
#*# points =
#*# 	0.070000, 0.110000, 0.082500, 0.097500, 0.107500
#*# 	0.002500, 0.035000, 0.055000, 0.055000, 0.062500
#*# 	-0.020000, -0.010000, 0.000000, -0.010000, 0.065000
#*# 	-0.045000, 0.012500, -0.042500, -0.000000, 0.030000
#*# 	0.072500, 0.090000, 0.065000, 0.037500, 0.075000
#*# tension = 0.2
#*# min_x = 40.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 40.0
#*# x_count = 5
#*# max_y = 310.0
#*# mesh_x_pps = 2
#*# max_x = 310.0
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.022599, -0.007599, 0.029901, 0.029901, 0.007401
#*# 	  -0.005099, -0.002599, 0.012401, 0.024901, 0.054901
#*# 	  -0.030099, -0.022599, 0.004901, 0.022401, 0.012401
#*# 	  -0.027599, -0.027599, -0.017599, -0.007599, -0.025099
#*# 	  0.007401, -0.017599, 0.002401, 0.009901, -0.007599
#*# tension = 0.2
#*# min_x = 40.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 40.0
#*# x_count = 5
#*# max_y = 310.0
#*# mesh_x_pps = 2
#*# max_x = 310.0
#*#
#*# [bed_mesh default2]
#*# version = 1
#*# points =
#*# 	-0.097500, -0.047500, -0.055000, -0.077500, -0.095000
#*# 	-0.145000, -0.047500, -0.035000, -0.025000, -0.037500
#*# 	-0.150000, -0.027500, 0.000000, -0.072500, -0.052500
#*# 	-0.195000, -0.097500, -0.150000, -0.080000, -0.107500
#*# 	-0.097500, -0.055000, -0.085000, -0.100000, -0.100000
#*# tension = 0.2
#*# min_x = 50.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 50.0
#*# x_count = 5
#*# max_y = 300.0
#*# mesh_x_pps = 2
#*# max_x = 300.0
